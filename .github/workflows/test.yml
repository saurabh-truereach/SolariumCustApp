name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run TypeScript check
      run: npm run type-check
      
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
      - name: Run accessibility tests
      run: npm run test:a11y
      
    - name: Run accessibility lint checks
      run: npm run lint:a11y
      
    - name: Run accessibility audit
      run: npm run a11y:check
      continue-on-error: true
      
    - name: Upload accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report-${{ matrix.node-version }}
        path: |
          accessibility-report.html
          accessibility-report.json
        retention-days: 7
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Generate test report
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Coverage report generated in coverage/test-report.html" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "accessibility-report.json" ]; then
          echo "## Accessibility Results" >> $GITHUB_STEP_SUMMARY
          node -e "
            const fs = require('fs');
            try {
              const report = JSON.parse(fs.readFileSync('accessibility-report.json', 'utf8'));
              console.log('Overall Score: ' + (report.overallScore || 'N/A') + '/100');
              console.log('Critical Issues: ' + (report.criticalIssues || 0));
              console.log('Warnings: ' + (report.warnings || 0));
            } catch(e) {
              console.log('No accessibility report available');
            }
          " >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          junit.xml
        retention-days: 30

  build-android:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Android
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon
        
  build-ios:
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Build iOS
      run: |
        cd ios
        xcodebuild -workspace SolariumCustApp.xcworkspace -scheme SolariumCustApp -configuration Debug -destination 'platform=iOS Simulator,name=iPhone 14' build
